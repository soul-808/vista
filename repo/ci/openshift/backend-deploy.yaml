apiVersion: apps/v1
kind: Deployment
metadata:
  name: vista-backend
  labels:
    app: vista-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vista-backend
  template:
    metadata:
      labels:
        app: vista-backend
    spec:
      containers:
      - name: vista-backend
        image: docker.io/soul808/vista-backend:latest-20250503132927
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        env:
        - name: SERVER_SERVLET_CONTEXT_PATH
          value: "/api"
        - name: JAVA_OPTS
          value: "-Xms512m -Xmx1024m -XX:+UseG1GC -Dserver.servlet.context-path=/api"
        - name: SPRING_SECURITY_CORS_ALLOWED_ORIGINS
          value: "https://vista-frontend-brandonarka3-dev.apps.rm3.7wse.p1.openshiftapps.com,http://localhost:3000"
        - name: SPRING_SECURITY_CORS_ALLOWED_METHODS
          value: "GET,POST,PUT,DELETE,OPTIONS"
        - name: SPRING_SECURITY_CORS_ALLOWED_HEADERS
          value: "Origin,X-Requested-With,Content-Type,Accept,Authorization"
        - name: SPRING_SECURITY_CORS_ALLOW_CREDENTIALS
          value: "true"
        - name: SPRING_DATASOURCE_URL
          valueFrom:
            secretKeyRef:
              name: vista-db-secret
              key: url
        - name: SPRING_DATASOURCE_USERNAME
          valueFrom:
            secretKeyRef:
              name: vista-db-secret
              key: username
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: vista-db-secret
              key: password
        resources:
          limits:
            cpu: "1000m"
            memory: "1Gi"
          requests:
            cpu: "500m"
            memory: "512Mi"
        readinessProbe:
          httpGet:
            path: /api/health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /api/health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 15
---
apiVersion: v1
kind: Service
metadata:
  name: vista-backend
  labels:
    app: vista-backend
spec:
  selector:
    app: vista-backend
  ports:
  - port: 8080
    targetPort: 8080
  type: ClusterIP
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: vista-backend
  labels:
    app: vista-backend
spec:
  path: / 
  to:
    kind: Service
    name: vista-backend
  port:
    targetPort: 8080
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Redirect
