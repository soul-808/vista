apiVersion: apps/v1
kind: Deployment
metadata:
  name: vista-backend
  labels:
    app: vista-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vista-backend
  template:
    metadata:
      labels:
        app: vista-backend
    spec:
      containers:
      - name: vista-backend
        image: docker.io/soul808/vista-backend:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: "nodb"
        - name: SPRING_AUTOCONFIGURE_EXCLUDE
          value: "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration,org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration,org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration,org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration,org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration"
        - name: SPRING_JPA_HIBERNATE_DDL_AUTO
          value: "none"
        - name: SPRING_DATASOURCE_URL
          value: ""
        - name: SERVER_SERVLET_CONTEXT_PATH
          value: "/api"
        - name: JAVA_OPTS
          value: "-Xms512m -Xmx1024m -XX:+UseG1GC -Dspring.jpa.hibernate.ddl-auto=none -Dserver.servlet.context-path=/api -Dspring.autoconfigure.exclude=org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration,org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration,org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration"
        resources:
          limits:
            cpu: "1000m"
            memory: "1Gi"
          requests:
            cpu: "500m"
            memory: "512Mi"
        readinessProbe:
          tcpSocket:
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        livenessProbe:
          tcpSocket:
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 15
---
apiVersion: v1
kind: Service
metadata:
  name: vista-backend
  labels:
    app: vista-backend
spec:
  selector:
    app: vista-backend
  ports:
  - port: 8080
    targetPort: 8080
  type: ClusterIP
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: vista-backend
  labels:
    app: vista-backend
spec:
  path: / 
  to:
    kind: Service
    name: vista-backend
  port:
    targetPort: 8080
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Redirect
